import sys
from awsglue.transforms import *
from awsglue.utils import getResolvedOptions
from pyspark.context import SparkContext
from awsglue.context import GlueContext
from awsglue.job import Job
import gs_sequence_id
from awsgluedq.transforms import EvaluateDataQuality
from awsglue.dynamicframe import DynamicFrame
from awsglue import DynamicFrame
from pyspark.sql import functions as SqlFuncs

def sparkUnion(glueContext, unionType, mapping, transformation_ctx) -> DynamicFrame:
    for alias, frame in mapping.items():
        frame.toDF().createOrReplaceTempView(alias)
    result = spark.sql("(select * from source1) UNION " + unionType + " (select * from source2)")
    return DynamicFrame.fromDF(result, glueContext, transformation_ctx)
args = getResolvedOptions(sys.argv, ['JOB_NAME'])
sc = SparkContext()
glueContext = GlueContext(sc)
spark = glueContext.spark_session
job = Job(glueContext)
job.init(args['JOB_NAME'], args)

# Default ruleset used by all target nodes with data quality enabled
DEFAULT_DATA_QUALITY_RULESET = """
    Rules = [
        ColumnCount > 0
    ]
"""

# Script generated for node Dados Setembro 2020 Bronze
DadosSetembro2020Bronze_node1756408604079 = glueContext.create_dynamic_frame.from_options(format_options={"quoteChar": "\"", "withHeader": True, "separator": ",", "optimizePerformance": False}, connection_type="s3", format="csv", connection_options={"paths": ["s3://datalake-pnad-covid/bronze/PNAD_COVID_092020.csv"], "recurse": True}, transformation_ctx="DadosSetembro2020Bronze_node1756408604079")

# Script generated for node Dados Novembro 2020 Bronze
DadosNovembro2020Bronze_node1756408605267 = glueContext.create_dynamic_frame.from_options(format_options={"quoteChar": "\"", "withHeader": True, "separator": ",", "optimizePerformance": False}, connection_type="s3", format="csv", connection_options={"paths": ["s3://datalake-pnad-covid/bronze/PNAD_COVID_112020.csv"], "recurse": True}, transformation_ctx="DadosNovembro2020Bronze_node1756408605267")

# Script generated for node Dados Outubro 2020 Bronze
DadosOutubro2020Bronze_node1756408604663 = glueContext.create_dynamic_frame.from_options(format_options={"quoteChar": "\"", "withHeader": True, "separator": ",", "optimizePerformance": False}, connection_type="s3", format="csv", connection_options={"paths": ["s3://datalake-pnad-covid/bronze/PNAD_COVID_102020.csv"], "recurse": True}, transformation_ctx="DadosOutubro2020Bronze_node1756408604663")

# Script generated for node Altera variáveis para int Setembro 2020
AlteravariveisparaintSetembro2020_node1756408750299 = ApplyMapping.apply(frame=DadosSetembro2020Bronze_node1756408604079, mappings=[("Ano", "string", "Ano", "int"), ("UF", "string", "UF", "int"), ("CAPITAL", "string", "CAPITAL", "int"), ("RM_RIDE", "string", "RM_RIDE", "int"), ("V1008", "string", "n_domicilio", "int"), ("V1012", "string", "semana_mes", "int"), ("V1013", "string", "mes_pesquisa", "int"), ("V1016", "string", "n_entrevista", "int"), ("Estrato", "string", "Estrato", "int"), ("UPA", "string", "UPA", "int"), ("V1022", "string", "situacao_domicilio", "int"), ("V1023", "string", "tipo_area", "int"), ("V1030", "string", "projecao_populacao", "int"), ("V1031", "string", "peso_com_estrato", "int"), ("V1032", "string", "peso_sem_estrato", "int"), ("posest", "string", "posest", "int"), ("A001", "string", "n_ordem", "int"), ("A001A", "string", "condicao_morador_domicilio", "int"), ("A001B1", "string", "dia_nasc", "int"), ("A001B2", "string", "mes_nasc", "int"), ("A001B3", "string", "ano_nasc", "int"), ("A002", "string", "idade", "int"), ("A003", "string", "sexo", "int"), ("A004", "string", "cor_raca", "int"), ("A005", "string", "escolaridade", "int"), ("A006", "string", "estuda", "int"), ("A007", "string", "atv_escolar", "int"), ("A008", "string", "dias_atv_escolar", "int"), ("A009", "string", "tempo_atv_escolar", "int"), ("B0011", "string", "febre", "int"), ("B0012", "string", "tosse", "int"), ("B0013", "string", "dor_garganta", "int"), ("B0014", "string", "dificuldade_respirar", "int"), ("B0015", "string", "dor_cabeca", "int"), ("B0016", "string", "dor_peito", "int"), ("B0017", "string", "nausea", "int"), ("B0018", "string", "nariz_entupido", "int"), ("B0019", "string", "fadiga", "int"), ("B00110", "string", "dor_olhos", "int"), ("B00111", "string", "perda_cheiro_sabor", "int"), ("B00112", "string", "dor_muscular", "int"), ("B00113", "string", "diarreia", "int"), ("B002", "string", "visitou_estabelecimento_saude", "int"), ("B0031", "string", "ficou_casa", "int"), ("B0032", "string", "ligou_profissional_saude", "int"), ("B0033", "string", "auto_medicou", "int"), ("B0034", "string", "medicou_orientado", "int"), ("B0035", "string", "recebeu_visita_sus", "int"), ("B0036", "string", "recebeu_visita_particular", "int"), ("B0037", "string", "outra_providencia", "int"), ("B0041", "string", "buscou_ubs", "int"), ("B0042", "string", "buscou_ps_sus", "int"), ("B0043", "string", "buscou_hospital_sus", "int"), ("B0044", "string", "buscou_ambulatorio_privado", "int"), ("B0045", "string", "buscou_ps_privado", "int"), ("B0046", "string", "buscou_hospital_privado", "int"), ("B005", "string", "foi_internado", "int"), ("B006", "string", "foi_entubado", "int"), ("B007", "string", "plano_saude", "int"), ("B008", "string", "realizou_teste_covid", "int"), ("B009A", "string", "swab", "int"), ("B009B", "string", "resultado_swab", "int"), ("B009C", "string", "furo_dedo", "int"), ("B009D", "string", "resultado_furo_dedo", "int"), ("B009E", "string", "sangue_veia", "int"), ("B009F", "string", "resultado_sangue_veia", "int"), ("B0101", "string", "diabetes", "int"), ("B0102", "string", "hipertensao", "int"), ("B0103", "string", "doenca_respiratoria", "int"), ("B0104", "string", "doenca_cardiaca", "int"), ("B0105", "string", "depressao", "int"), ("B0106", "string", "cancer", "int"), ("B011", "string", "restringiu_contato", "int"), ("C001", "string", "trabalhou_semana_passada", "int"), ("C002", "string", "afastado_temporariamente", "int"), ("C003", "string", "motivo_afastamento", "int"), ("C004", "string", "continuou_remunerado", "int"), ("C005", "string", "tempo_afastado", "int"), ("C0051", "string", "tempo_afastado_1m_11m", "int"), ("C0052", "string", "tempo_afastado_1a_2a", "int"), ("C0053", "string", "tempo_afastado_1a_98a", "int"), ("C006", "string", "possui_outro_emprego", "int"), ("C007", "string", "relacao_trabalho", "int"), ("C007A", "string", "area_trabalho", "int"), ("C007B", "string", "clt_estatuario", "int"), ("C007C", "string", "funcao_trabalho", "int"), ("C007D", "string", "atividade_empresa", "int"), ("C007E", "string", "quantidade_empregados", "int"), ("C007E1", "string", "quantidade_empregados_1_5", "int"), ("C007E2", "string", "quantidade_empregados_6_10", "int"), ("C007F", "string", "contrato_suspenso", "int"), ("C008", "string", "horas_trabalhadas_normalmente", "int"), ("C009", "string", "horas_trabalhadas_fato", "int"), ("C009A", "string", "gostaria_trabalhar_mais", "int"), ("C010", "string", "salario_normal", "int"), ("C0101", "string", "recebia_dinheiro", "int"), ("C01011", "string", "n_faixa_salario", "int"), ("C01012", "string", "valor_reais", "int"), ("C0102", "string", "recebia_produtos", "int"), ("C01021", "string", "n_faixa_produtos", "int"), ("C01022", "string", "valor_produtos", "int"), ("C0103", "string", "recebia_beneficios", "int"), ("C0104", "string", "nao_remunerado", "int"), ("C011A", "string", "recebia_todos_trabalhos", "int"), ("C011A1", "string", "recebia_dinheiro_todos_trabalhos", "int"), ("C011A11", "string", "n_faixa_rendimento", "int"), ("C011A12", "string", "valor_rendimento_reais", "int"), ("C011A2", "string", "n_faixa_produtos_mercadorias", "int"), ("C011A21", "string", "valor_produtos_mercadorias", "int"), ("C011A22", "string", "valor_reais_produtos_mercadorias", "int"), ("C012", "string", "trabalhou_local_habitual", "int"), ("C013", "string", "home_office", "int"), ("C014", "string", "inss", "int"), ("C015", "string", "buscou_trabalho", "int"), ("C016", "string", "motivo_nao_buscou_trabalho", "int"), ("C017A", "string", "gostaria_ter_trabalhado", "int"), ("D0011", "string", "rendimento_aposentadoria", "int"), ("D0013", "string", "soma_valor_aposentadoria", "int"), ("D0021", "string", "rendimento_pensao", "int"), ("D0023", "string", "soma_valor_pensao", "int"), ("D0031", "string", "rendimento_bolsa_familia", "int"), ("D0033", "string", "soma_valor_bolsa_familia", "int"), ("D0041", "string", "recebeu_beneficio_assistencial", "int"), ("D0043", "string", "soma_valor_beneficio_assistencial", "int"), ("D0051", "string", "auxilio_emergencial", "int"), ("D0053", "string", "soma_valor_auixilio_emergencial", "int"), ("D0061", "string", "seguro_desemprego", "int"), ("D0063", "string", "soma_valor_seguro_desemprego", "int"), ("D0071", "string", "outros_rendimentos", "int"), ("D0073", "string", "soma_valor_outros_rendimentos", "int"), ("E001", "string", "emprestimo", "int"), ("E0021", "string", "emprestimo_banco", "int"), ("E0022", "string", "emprestimo_parente", "int"), ("E0023", "string", "emprestimo_patrao", "int"), ("E0024", "string", "outro_emprestimo", "int"), ("F001", "string", "condicao_domicilio", "int"), ("F0021", "string", "valor_aluguel", "int"), ("F0022", "string", "n_faixa_aluguel", "int"), ("F002A1", "string", "sabao_detergente", "int"), ("F002A2", "string", "alcool70_gel_liquido", "int"), ("F002A3", "string", "mascara", "int"), ("F002A4", "string", "luva_descartavel", "int"), ("F002A5", "string", "agua_sanitaria", "int"), ("F0061", "string", "quem_respondeu", "int"), ("F006", "string", "n_ordem_morador", "int")], transformation_ctx="AlteravariveisparaintSetembro2020_node1756408750299")

# Script generated for node Altera variáveis para int Novembro 2020
AlteravariveisparaintNovembro2020_node1756408752185 = ApplyMapping.apply(frame=DadosNovembro2020Bronze_node1756408605267, mappings=[("Ano", "string", "Ano", "int"), ("UF", "string", "UF", "int"), ("CAPITAL", "string", "CAPITAL", "int"), ("RM_RIDE", "string", "RM_RIDE", "int"), ("V1008", "string", "n_domicilio", "int"), ("V1012", "string", "semana_mes", "int"), ("V1013", "string", "mes_pesquisa", "int"), ("V1016", "string", "n_entrevista", "int"), ("Estrato", "string", "Estrato", "int"), ("UPA", "string", "UPA", "int"), ("V1022", "string", "situacao_domicilio", "int"), ("V1023", "string", "tipo_area", "int"), ("V1030", "string", "projecao_populacao", "int"), ("V1031", "string", "peso_com_estrato", "int"), ("V1032", "string", "peso_sem_estrato", "int"), ("posest", "string", "posest", "int"), ("A001", "string", "n_ordem", "int"), ("A001A", "string", "condicao_morador_domicilio", "int"), ("A001B1", "string", "dia_nasc", "int"), ("A001B2", "string", "mes_nasc", "int"), ("A001B3", "string", "ano_nasc", "int"), ("A002", "string", "idade", "int"), ("A003", "string", "sexo", "int"), ("A004", "string", "cor_raca", "int"), ("A005", "string", "escolaridade", "int"), ("A006", "string", "estuda", "int"), ("A007", "string", "atv_escolar", "int"), ("A008", "string", "dias_atv_escolar", "int"), ("A009", "string", "tempo_atv_escolar", "int"), ("B0011", "string", "febre", "int"), ("B0012", "string", "tosse", "int"), ("B0013", "string", "dor_garganta", "int"), ("B0014", "string", "dificuldade_respirar", "int"), ("B0015", "string", "dor_cabeca", "int"), ("B0016", "string", "dor_peito", "int"), ("B0017", "string", "nausea", "int"), ("B0018", "string", "nariz_entupido", "int"), ("B0019", "string", "fadiga", "int"), ("B00110", "string", "dor_olhos", "int"), ("B00111", "string", "perda_cheiro_sabor", "int"), ("B00112", "string", "dor_muscular", "int"), ("B00113", "string", "diarreia", "int"), ("B002", "string", "visitou_estabelecimento_saude", "int"), ("B0031", "string", "ficou_casa", "int"), ("B0032", "string", "ligou_profissional_saude", "int"), ("B0033", "string", "auto_medicou", "int"), ("B0034", "string", "medicou_orientado", "int"), ("B0035", "string", "recebeu_visita_sus", "int"), ("B0036", "string", "recebeu_visita_particular", "int"), ("B0037", "string", "outra_providencia", "int"), ("B0041", "string", "buscou_ubs", "int"), ("B0042", "string", "buscou_ps_sus", "int"), ("B0043", "string", "buscou_hospital_sus", "int"), ("B0044", "string", "buscou_ambulatorio_privado", "int"), ("B0045", "string", "buscou_ps_privado", "int"), ("B0046", "string", "buscou_hospital_privado", "int"), ("B005", "string", "foi_internado", "int"), ("B006", "string", "foi_entubado", "int"), ("B007", "string", "plano_saude", "int"), ("B008", "string", "realizou_teste_covid", "int"), ("B009A", "string", "swab", "int"), ("B009B", "string", "resultado_swab", "int"), ("B009C", "string", "furo_dedo", "int"), ("B009D", "string", "resultado_furo_dedo", "int"), ("B009E", "string", "sangue_veia", "int"), ("B009F", "string", "resultado_sangue_veia", "int"), ("B0101", "string", "diabetes", "int"), ("B0102", "string", "hipertensao", "int"), ("B0103", "string", "doenca_respiratoria", "int"), ("B0104", "string", "doenca_cardiaca", "int"), ("B0105", "string", "depressao", "int"), ("B0106", "string", "cancer", "int"), ("B011", "string", "restringiu_contato", "int"), ("C001", "string", "trabalhou_semana_passada", "int"), ("C002", "string", "afastado_temporariamente", "int"), ("C003", "string", "motivo_afastamento", "int"), ("C004", "string", "continuou_remunerado", "int"), ("C005", "string", "tempo_afastado", "int"), ("C0051", "string", "tempo_afastado_1m_11m", "int"), ("C0052", "string", "tempo_afastado_1a_2a", "int"), ("C0053", "string", "tempo_afastado_1a_98a", "int"), ("C006", "string", "possui_outro_emprego", "int"), ("C007", "string", "relacao_trabalho", "int"), ("C007A", "string", "area_trabalho", "int"), ("C007B", "string", "clt_estatuario", "int"), ("C007C", "string", "funcao_trabalho", "int"), ("C007D", "string", "atividade_empresa", "int"), ("C007E", "string", "quantidade_empregados", "int"), ("C007E1", "string", "quantidade_empregados_1_5", "int"), ("C007E2", "string", "quantidade_empregados_6_10", "int"), ("C007F", "string", "contrato_suspenso", "int"), ("C008", "string", "horas_trabalhadas_normalmente", "int"), ("C009", "string", "horas_trabalhadas_fato", "int"), ("C009A", "string", "gostaria_trabalhar_mais", "int"), ("C010", "string", "salario_normal", "int"), ("C0101", "string", "recebia_dinheiro", "int"), ("C01011", "string", "n_faixa_salario", "int"), ("C01012", "string", "valor_reais", "int"), ("C0102", "string", "recebia_produtos", "int"), ("C01021", "string", "n_faixa_produtos", "int"), ("C01022", "string", "valor_produtos", "int"), ("C0103", "string", "recebia_beneficios", "int"), ("C0104", "string", "nao_remunerado", "int"), ("C011A", "string", "recebia_todos_trabalhos", "int"), ("C011A1", "string", "recebia_dinheiro_todos_trabalhos", "int"), ("C011A11", "string", "n_faixa_rendimento", "int"), ("C011A12", "string", "valor_rendimento_reais", "int"), ("C011A2", "string", "n_faixa_produtos_mercadorias", "int"), ("C011A21", "string", "valor_produtos_mercadorias", "int"), ("C011A22", "string", "valor_reais_produtos_mercadorias", "int"), ("C012", "string", "trabalhou_local_habitual", "int"), ("C013", "string", "home_office", "int"), ("C014", "string", "inss", "int"), ("C015", "string", "buscou_trabalho", "int"), ("C016", "string", "motivo_nao_buscou_trabalho", "int"), ("C017A", "string", "gostaria_ter_trabalhado", "int"), ("D0011", "string", "rendimento_aposentadoria", "int"), ("D0013", "string", "soma_valor_aposentadoria", "int"), ("D0021", "string", "rendimento_pensao", "int"), ("D0023", "string", "soma_valor_pensao", "int"), ("D0031", "string", "rendimento_bolsa_familia", "int"), ("D0033", "string", "soma_valor_bolsa_familia", "int"), ("D0041", "string", "recebeu_beneficio_assistencial", "int"), ("D0043", "string", "soma_valor_beneficio_assistencial", "int"), ("D0051", "string", "auxilio_emergencial", "int"), ("D0053", "string", "soma_valor_auixilio_emergencial", "int"), ("D0061", "string", "seguro_desemprego", "int"), ("D0063", "string", "soma_valor_seguro_desemprego", "int"), ("D0071", "string", "outros_rendimentos", "int"), ("D0073", "string", "soma_valor_outros_rendimentos", "int"), ("E001", "string", "emprestimo", "int"), ("E0021", "string", "emprestimo_banco", "int"), ("E0022", "string", "emprestimo_parente", "int"), ("E0023", "string", "emprestimo_patrao", "int"), ("E0024", "string", "outro_emprestimo", "int"), ("F001", "string", "condicao_domicilio", "int"), ("F0021", "string", "valor_aluguel", "int"), ("F0022", "string", "n_faixa_aluguel", "int"), ("F002A1", "string", "sabao_detergente", "int"), ("F002A2", "string", "alcool70_gel_liquido", "int"), ("F002A3", "string", "mascara", "int"), ("F002A4", "string", "luva_descartavel", "int"), ("F002A5", "string", "agua_sanitaria", "int"), ("F0061", "string", "quem_respondeu", "int"), ("F006", "string", "n_ordem_morador", "int")], transformation_ctx="AlteravariveisparaintNovembro2020_node1756408752185")

# Script generated for node Altera variáveis para int Outubro 2020
AlteravariveisparaintOutubro2020_node1756408751732 = ApplyMapping.apply(frame=DadosOutubro2020Bronze_node1756408604663, mappings=[("Ano", "string", "Ano", "int"), ("UF", "string", "UF", "int"), ("CAPITAL", "string", "CAPITAL", "int"), ("RM_RIDE", "string", "RM_RIDE", "int"), ("V1008", "string", "n_domicilio", "int"), ("V1012", "string", "semana_mes", "int"), ("V1013", "string", "mes_pesquisa", "int"), ("V1016", "string", "n_entrevista", "int"), ("Estrato", "string", "Estrato", "int"), ("UPA", "string", "UPA", "int"), ("V1022", "string", "situacao_domicilio", "int"), ("V1023", "string", "tipo_area", "int"), ("V1030", "string", "projecao_populacao", "int"), ("V1031", "string", "peso_com_estrato", "int"), ("V1032", "string", "peso_sem_estrato", "int"), ("posest", "string", "posest", "int"), ("A001", "string", "n_ordem", "int"), ("A001A", "string", "condicao_morador_domicilio", "int"), ("A001B1", "string", "dia_nasc", "int"), ("A001B2", "string", "mes_nasc", "int"), ("A001B3", "string", "ano_nasc", "int"), ("A002", "string", "idade", "int"), ("A003", "string", "sexo", "int"), ("A004", "string", "cor_raca", "int"), ("A005", "string", "escolaridade", "int"), ("A006", "string", "estuda", "int"), ("A007", "string", "atv_escolar", "int"), ("A008", "string", "dias_atv_escolar", "int"), ("A009", "string", "tempo_atv_escolar", "int"), ("B0011", "string", "febre", "int"), ("B0012", "string", "tosse", "int"), ("B0013", "string", "dor_garganta", "int"), ("B0014", "string", "dificuldade_respirar", "int"), ("B0015", "string", "dor_cabeca", "int"), ("B0016", "string", "dor_peito", "int"), ("B0017", "string", "nausea", "int"), ("B0018", "string", "nariz_entupido", "int"), ("B0019", "string", "fadiga", "int"), ("B00110", "string", "dor_olhos", "int"), ("B00111", "string", "perda_cheiro_sabor", "int"), ("B00112", "string", "dor_muscular", "int"), ("B00113", "string", "diarreia", "int"), ("B002", "string", "visitou_estabelecimento_saude", "int"), ("B0031", "string", "ficou_casa", "int"), ("B0032", "string", "ligou_profissional_saude", "int"), ("B0033", "string", "auto_medicou", "int"), ("B0034", "string", "medicou_orientado", "int"), ("B0035", "string", "recebeu_visita_sus", "int"), ("B0036", "string", "recebeu_visita_particular", "int"), ("B0037", "string", "outra_providencia", "int"), ("B0041", "string", "buscou_ubs", "int"), ("B0042", "string", "buscou_ps_sus", "int"), ("B0043", "string", "buscou_hospital_sus", "int"), ("B0044", "string", "buscou_ambulatorio_privado", "int"), ("B0045", "string", "buscou_ps_privado", "int"), ("B0046", "string", "buscou_hospital_privado", "int"), ("B005", "string", "foi_internado", "int"), ("B006", "string", "foi_entubado", "int"), ("B007", "string", "plano_saude", "int"), ("B008", "string", "realizou_teste_covid", "int"), ("B009A", "string", "swab", "int"), ("B009B", "string", "resultado_swab", "int"), ("B009C", "string", "furo_dedo", "int"), ("B009D", "string", "resultado_furo_dedo", "int"), ("B009E", "string", "sangue_veia", "int"), ("B009F", "string", "resultado_sangue_veia", "int"), ("B0101", "string", "diabetes", "int"), ("B0102", "string", "hipertensao", "int"), ("B0103", "string", "doenca_respiratoria", "int"), ("B0104", "string", "doenca_cardiaca", "int"), ("B0105", "string", "depressao", "int"), ("B0106", "string", "cancer", "int"), ("B011", "string", "restringiu_contato", "int"), ("C001", "string", "trabalhou_semana_passada", "int"), ("C002", "string", "afastado_temporariamente", "int"), ("C003", "string", "motivo_afastamento", "int"), ("C004", "string", "continuou_remunerado", "int"), ("C005", "string", "tempo_afastado", "int"), ("C0051", "string", "tempo_afastado_1m_11m", "int"), ("C0052", "string", "tempo_afastado_1a_2a", "int"), ("C0053", "string", "tempo_afastado_1a_98a", "int"), ("C006", "string", "possui_outro_emprego", "int"), ("C007", "string", "relacao_trabalho", "int"), ("C007A", "string", "area_trabalho", "int"), ("C007B", "string", "clt_estatuario", "int"), ("C007C", "string", "funcao_trabalho", "int"), ("C007D", "string", "atividade_empresa", "int"), ("C007E", "string", "quantidade_empregados", "int"), ("C007E1", "string", "quantidade_empregados_1_5", "int"), ("C007E2", "string", "quantidade_empregados_6_10", "int"), ("C007F", "string", "contrato_suspenso", "int"), ("C008", "string", "horas_trabalhadas_normalmente", "int"), ("C009", "string", "horas_trabalhadas_fato", "int"), ("C009A", "string", "gostaria_trabalhar_mais", "int"), ("C010", "string", "salario_normal", "int"), ("C0101", "string", "recebia_dinheiro", "int"), ("C01011", "string", "n_faixa_salario", "int"), ("C01012", "string", "valor_reais", "int"), ("C0102", "string", "recebia_produtos", "int"), ("C01021", "string", "n_faixa_produtos", "int"), ("C01022", "string", "valor_produtos", "int"), ("C0103", "string", "recebia_beneficios", "int"), ("C0104", "string", "nao_remunerado", "int"), ("C011A", "string", "recebia_todos_trabalhos", "int"), ("C011A1", "string", "recebia_dinheiro_todos_trabalhos", "int"), ("C011A11", "string", "n_faixa_rendimento", "int"), ("C011A12", "string", "valor_rendimento_reais", "int"), ("C011A2", "string", "n_faixa_produtos_mercadorias", "int"), ("C011A21", "string", "valor_produtos_mercadorias", "int"), ("C011A22", "string", "valor_reais_produtos_mercadorias", "int"), ("C012", "string", "trabalhou_local_habitual", "int"), ("C013", "string", "home_office", "int"), ("C014", "string", "inss", "int"), ("C015", "string", "buscou_trabalho", "int"), ("C016", "string", "motivo_nao_buscou_trabalho", "int"), ("C017A", "string", "gostaria_ter_trabalhado", "int"), ("D0011", "string", "rendimento_aposentadoria", "int"), ("D0013", "string", "soma_valor_aposentadoria", "int"), ("D0021", "string", "rendimento_pensao", "int"), ("D0023", "string", "soma_valor_pensao", "int"), ("D0031", "string", "rendimento_bolsa_familia", "int"), ("D0033", "string", "soma_valor_bolsa_familia", "int"), ("D0041", "string", "recebeu_beneficio_assistencial", "int"), ("D0043", "string", "soma_valor_beneficio_assistencial", "int"), ("D0051", "string", "auxilio_emergencial", "int"), ("D0053", "string", "soma_valor_auixilio_emergencial", "int"), ("D0061", "string", "seguro_desemprego", "int"), ("D0063", "string", "soma_valor_seguro_desemprego", "int"), ("D0071", "string", "outros_rendimentos", "int"), ("D0073", "string", "soma_valor_outros_rendimentos", "int"), ("E001", "string", "emprestimo", "int"), ("E0021", "string", "emprestimo_banco", "int"), ("E0022", "string", "emprestimo_parente", "int"), ("E0023", "string", "emprestimo_patrao", "int"), ("E0024", "string", "outro_emprestimo", "int"), ("F001", "string", "condicao_domicilio", "int"), ("F0021", "string", "valor_aluguel", "int"), ("F0022", "string", "n_faixa_aluguel", "int"), ("F002A1", "string", "sabao_detergente", "int"), ("F002A2", "string", "alcool70_gel_liquido", "int"), ("F002A3", "string", "mascara", "int"), ("F002A4", "string", "luva_descartavel", "int"), ("F002A5", "string", "agua_sanitaria", "int"), ("F0061", "string", "quem_respondeu", "int"), ("F006", "string", "n_ordem_morador", "int")], transformation_ctx="AlteravariveisparaintOutubro2020_node1756408751732")

# Script generated for node Drop Duplicates
DropDuplicates_node1757012036801 =  DynamicFrame.fromDF(AlteravariveisparaintSetembro2020_node1756408750299.toDF().dropDuplicates(), glueContext, "DropDuplicates_node1757012036801")

# Script generated for node Drop Duplicates
DropDuplicates_node1757012038275 =  DynamicFrame.fromDF(AlteravariveisparaintNovembro2020_node1756408752185.toDF().dropDuplicates(), glueContext, "DropDuplicates_node1757012038275")

# Script generated for node Drop Duplicates
DropDuplicates_node1757012037574 =  DynamicFrame.fromDF(AlteravariveisparaintOutubro2020_node1756408751732.toDF().dropDuplicates(), glueContext, "DropDuplicates_node1757012037574")

# Script generated for node Select Fields
SelectFields_node1757115797850 = SelectFields.apply(frame=DropDuplicates_node1757012036801, paths=["Ano", "UF", "CAPITAL", "RM_RIDE", "semana_mes", "mes_pesquisa", "situacao_domicilio", "tipo_area", "febre", "tosse", "dor_garganta", "dificuldade_respirar", "dor_cabeca", "dor_peito", "nausea", "nariz_entupido", "fadiga", "dor_olhos", "perda_cheiro_sabor", "dor_muscular", "diarreia", "visitou_estabelecimento_saude", "ficou_casa", "ligou_profissional_saude", "auto_medicou", "medicou_orientado", "recebeu_visita_sus", "recebeu_visita_particular", "outra_providencia", "buscou_ubs", "buscou_ps_sus", "buscou_hospital_sus", "buscou_ambulatorio_privado", "buscou_ps_privado", "buscou_hospital_privado", "foi_internado", "foi_entubado", "realizou_teste_covid", "swab", "resultado_swab", "furo_dedo", "resultado_furo_dedo", "sangue_veia", "resultado_sangue_veia", "diabetes", "hipertensao", "doenca_respiratoria", "doenca_cardiaca", "depressao", "cancer", "restringiu_contato", "estuda", "atv_escolar", "trabalhou_local_habitual", "home_office", "trabalhou_semana_passada", "afastado_temporariamente", "relacao_trabalho", "area_trabalho", "clt_estatuario", "funcao_trabalho", "atividade_empresa", "quantidade_empregados", "quantidade_empregados_1_5", "quantidade_empregados_6_10", "horas_trabalhadas_fato", "salario_normal", "rendimento_aposentadoria", "soma_valor_aposentadoria", "rendimento_pensao", "soma_valor_pensao", "rendimento_bolsa_familia", "soma_valor_bolsa_familia", "recebeu_beneficio_assistencial", "soma_valor_beneficio_assistencial", "auxilio_emergencial", "soma_valor_auixilio_emergencial", "seguro_desemprego", "soma_valor_seguro_desemprego", "outros_rendimentos", "emprestimo", "idade", "sexo", "cor_raca", "escolaridade", "soma_valor_outros_rendimentos"], transformation_ctx="SelectFields_node1757115797850")

# Script generated for node Select Fields
SelectFields_node1757115816086 = SelectFields.apply(frame=DropDuplicates_node1757012038275, paths=["Ano", "UF", "CAPITAL", "RM_RIDE", "semana_mes", "mes_pesquisa", "situacao_domicilio", "tipo_area", "febre", "tosse", "dor_garganta", "dificuldade_respirar", "dor_cabeca", "dor_peito", "nausea", "nariz_entupido", "fadiga", "dor_olhos", "perda_cheiro_sabor", "dor_muscular", "diarreia", "visitou_estabelecimento_saude", "ficou_casa", "ligou_profissional_saude", "auto_medicou", "medicou_orientado", "recebeu_visita_sus", "recebeu_visita_particular", "outra_providencia", "buscou_ubs", "buscou_ps_sus", "buscou_hospital_sus", "buscou_ambulatorio_privado", "buscou_ps_privado", "buscou_hospital_privado", "foi_internado", "foi_entubado", "realizou_teste_covid", "swab", "resultado_swab", "furo_dedo", "resultado_furo_dedo", "sangue_veia", "resultado_sangue_veia", "diabetes", "hipertensao", "doenca_respiratoria", "doenca_cardiaca", "depressao", "cancer", "restringiu_contato", "estuda", "atv_escolar", "trabalhou_local_habitual", "home_office", "trabalhou_semana_passada", "afastado_temporariamente", "relacao_trabalho", "area_trabalho", "clt_estatuario", "funcao_trabalho", "atividade_empresa", "quantidade_empregados", "quantidade_empregados_1_5", "quantidade_empregados_6_10", "horas_trabalhadas_fato", "salario_normal", "rendimento_aposentadoria", "soma_valor_aposentadoria", "rendimento_pensao", "soma_valor_pensao", "rendimento_bolsa_familia", "soma_valor_bolsa_familia", "recebeu_beneficio_assistencial", "soma_valor_beneficio_assistencial", "auxilio_emergencial", "soma_valor_auixilio_emergencial", "seguro_desemprego", "soma_valor_seguro_desemprego", "outros_rendimentos", "emprestimo", "idade", "sexo", "cor_raca", "escolaridade", "soma_valor_outros_rendimentos"], transformation_ctx="SelectFields_node1757115816086")

# Script generated for node Select Fields
SelectFields_node1757115836299 = SelectFields.apply(frame=DropDuplicates_node1757012037574, paths=["Ano", "UF", "CAPITAL", "RM_RIDE", "semana_mes", "mes_pesquisa", "situacao_domicilio", "tipo_area", "febre", "tosse", "dor_garganta", "dificuldade_respirar", "dor_cabeca", "dor_peito", "nausea", "nariz_entupido", "fadiga", "dor_olhos", "perda_cheiro_sabor", "dor_muscular", "diarreia", "visitou_estabelecimento_saude", "ficou_casa", "ligou_profissional_saude", "auto_medicou", "medicou_orientado", "recebeu_visita_sus", "recebeu_visita_particular", "outra_providencia", "buscou_ubs", "buscou_ps_sus", "buscou_hospital_sus", "buscou_ambulatorio_privado", "buscou_ps_privado", "buscou_hospital_privado", "foi_internado", "foi_entubado", "realizou_teste_covid", "swab", "resultado_swab", "furo_dedo", "resultado_furo_dedo", "sangue_veia", "resultado_sangue_veia", "diabetes", "hipertensao", "doenca_respiratoria", "doenca_cardiaca", "depressao", "cancer", "restringiu_contato", "estuda", "atv_escolar", "trabalhou_local_habitual", "home_office", "trabalhou_semana_passada", "afastado_temporariamente", "relacao_trabalho", "area_trabalho", "clt_estatuario", "funcao_trabalho", "atividade_empresa", "quantidade_empregados", "quantidade_empregados_1_5", "quantidade_empregados_6_10", "horas_trabalhadas_fato", "salario_normal", "rendimento_aposentadoria", "soma_valor_aposentadoria", "rendimento_pensao", "soma_valor_pensao", "rendimento_bolsa_familia", "soma_valor_bolsa_familia", "recebeu_beneficio_assistencial", "soma_valor_beneficio_assistencial", "auxilio_emergencial", "soma_valor_auixilio_emergencial", "seguro_desemprego", "soma_valor_seguro_desemprego", "outros_rendimentos", "soma_valor_outros_rendimentos", "emprestimo", "idade", "sexo", "cor_raca", "escolaridade"], transformation_ctx="SelectFields_node1757115836299")

# Script generated for node Union
Union_node1757288150005 = sparkUnion(glueContext, unionType = "ALL", mapping = {"source1": SelectFields_node1757115797850, "source2": SelectFields_node1757115836299}, transformation_ctx = "Union_node1757288150005")

# Script generated for node Union
Union_node1757288181782 = sparkUnion(glueContext, unionType = "ALL", mapping = {"source1": SelectFields_node1757115816086, "source2": Union_node1757288150005}, transformation_ctx = "Union_node1757288181782")

# Script generated for node Adiciona id_form
Adicionaid_form_node1757984020597 = Union_node1757288181782.gs_sequence_id(colName="id_form")

# Script generated for node Setembro 2020 Silver
EvaluateDataQuality().process_rows(frame=DropDuplicates_node1757012036801, ruleset=DEFAULT_DATA_QUALITY_RULESET, publishing_options={"dataQualityEvaluationContext": "EvaluateDataQuality_node1756405149931", "enableDataQualityResultsPublishing": True}, additional_options={"dataQualityResultsPublishing.strategy": "BEST_EFFORT", "observations.scope": "ALL"})
Setembro2020Silver_node1756411016193 = glueContext.getSink(path="s3://datalake-pnad-covid/silver/year=2020/month=09/", connection_type="s3", updateBehavior="UPDATE_IN_DATABASE", partitionKeys=[], enableUpdateCatalog=True, transformation_ctx="Setembro2020Silver_node1756411016193")
Setembro2020Silver_node1756411016193.setCatalogInfo(catalogDatabase="tech_challenge3",catalogTableName="setembro")
Setembro2020Silver_node1756411016193.setFormat("glueparquet", compression="snappy")
Setembro2020Silver_node1756411016193.writeFrame(DropDuplicates_node1757012036801)
# Script generated for node Novembro 2020 Silver
EvaluateDataQuality().process_rows(frame=DropDuplicates_node1757012038275, ruleset=DEFAULT_DATA_QUALITY_RULESET, publishing_options={"dataQualityEvaluationContext": "EvaluateDataQuality_node1756405149931", "enableDataQualityResultsPublishing": True}, additional_options={"dataQualityResultsPublishing.strategy": "BEST_EFFORT", "observations.scope": "ALL"})
Novembro2020Silver_node1756411017532 = glueContext.getSink(path="s3://datalake-pnad-covid/silver/year=2020/month=11/", connection_type="s3", updateBehavior="UPDATE_IN_DATABASE", partitionKeys=[], enableUpdateCatalog=True, transformation_ctx="Novembro2020Silver_node1756411017532")
Novembro2020Silver_node1756411017532.setCatalogInfo(catalogDatabase="tech_challenge3",catalogTableName="novembro")
Novembro2020Silver_node1756411017532.setFormat("glueparquet", compression="snappy")
Novembro2020Silver_node1756411017532.writeFrame(DropDuplicates_node1757012038275)
# Script generated for node Outubro 2020 Silver
EvaluateDataQuality().process_rows(frame=DropDuplicates_node1757012037574, ruleset=DEFAULT_DATA_QUALITY_RULESET, publishing_options={"dataQualityEvaluationContext": "EvaluateDataQuality_node1756405149931", "enableDataQualityResultsPublishing": True}, additional_options={"dataQualityResultsPublishing.strategy": "BEST_EFFORT", "observations.scope": "ALL"})
Outubro2020Silver_node1756411018511 = glueContext.getSink(path="s3://datalake-pnad-covid/silver/year=2020/month=10/", connection_type="s3", updateBehavior="UPDATE_IN_DATABASE", partitionKeys=[], enableUpdateCatalog=True, transformation_ctx="Outubro2020Silver_node1756411018511")
Outubro2020Silver_node1756411018511.setCatalogInfo(catalogDatabase="tech_challenge3",catalogTableName="outubro")
Outubro2020Silver_node1756411018511.setFormat("glueparquet", compression="snappy")
Outubro2020Silver_node1756411018511.writeFrame(DropDuplicates_node1757012037574)
# Script generated for node Trimestre 2020 Gold
EvaluateDataQuality().process_rows(frame=Adicionaid_form_node1757984020597, ruleset=DEFAULT_DATA_QUALITY_RULESET, publishing_options={"dataQualityEvaluationContext": "EvaluateDataQuality_node1757285420478", "enableDataQualityResultsPublishing": True}, additional_options={"dataQualityResultsPublishing.strategy": "BEST_EFFORT", "observations.scope": "ALL"})
if (Adicionaid_form_node1757984020597.count() >= 1):
   Adicionaid_form_node1757984020597 = Adicionaid_form_node1757984020597.coalesce(1)
Trimestre2020Gold_node1757288353571 = glueContext.getSink(path="s3://datalake-pnad-covid/gold/", connection_type="s3", updateBehavior="UPDATE_IN_DATABASE", partitionKeys=[], enableUpdateCatalog=True, transformation_ctx="Trimestre2020Gold_node1757288353571")
Trimestre2020Gold_node1757288353571.setCatalogInfo(catalogDatabase="tech_challenge3",catalogTableName="trimestre")
Trimestre2020Gold_node1757288353571.setFormat("glueparquet", compression="snappy")
Trimestre2020Gold_node1757288353571.writeFrame(Adicionaid_form_node1757984020597)
job.commit()